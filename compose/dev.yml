x-developer: &fediverser-development
  user: "${UID:-1000}:${GID:-1000}"

x-lemmy-service: &lemmy-service
  networks:
    - internal

x-public-service: &public-service
  networks:
    - default
    - internal

x-internal-service: &internal-service
  networks:
    - internal

x-fediverser-dev: &fediverser-dev-service
  <<: *fediverser-development
  stdin_open: true
  tty: true
  build:
    context: .
    target: development
  restart: unless-stopped

  depends_on: &fediverser-service-dependencies
    - cache
    - broker
    - db

  environment: &fediverser_web_envvars
    FEDIVERSER_DATABASE_NAME: fediverser
    FEDIVERSER_DATABASE_USER: fediverser
    FEDIVERSER_DATABASE_PASSWORD: fediverser
    LEMMY_DATABASE_HOST: lemmy-db
    LEMMY_DATABASE_PORT: "5432"
    LEMMY_DATABASE_NAME: lemmy
    LEMMY_DATABASE_USER: lemmy
    LEMMY_DATABASE_PASSWORD: lemmy
    FEDIVERSER_EMAIL_MAILER_ADDRESS: noreply@fediverser.example.com
    FEDIVERSER_EMAIL_BACKEND: django.core.mail.backends.console.EmailBackend
    FEDIVERSER_SECRET_KEY: base-fediverser-secret-key
    FEDIVERSER_DEBUG: "true"
    IPYTHONDIR: /tmp/ipython

  env_file:
    - .env

  volumes:
    - ./:/app
    - static-data:/var/fediverser/static
    - media-data:/var/fediverser/media
    - ipython-dev-data:/tmp/ipython

x-webapp: &fediverser-webservice
  command: poetry run uvicorn fediverser.services.base.asgi:application --port 80 --host 0.0.0.0 --reload --reload-dir=/app/fediverser --reload-include *.html

services:
  cloudflared:
    <<: *public-service
    image: cloudflare/cloudflared

    volumes:
      - cloudflared-credentials-data:/etc/cloudflared
      - cloudflared-config-data:/home/nonroot/.cloudflared

  db:
    <<: *fediverser-development
    restart: unless-stopped
    environment:
      POSTGRES_USER: fediverser
      POSTGRES_PASSWORD: fediverser
      POSTGRES_DB: fediverser

  broker:
    restart: unless-stopped

  cache:
    restart: unless-stopped

  admin:
    <<: [*fediverser-dev-service, *fediverser-webservice]
    ports:
      - "8000:80"

  portal:
    <<: [*fediverser-dev-service, *fediverser-webservice]

  pull_reddit:
    <<: *fediverser-dev-service
    command: poetry run django-admin pull_from_reddit

  push_comments_to_lemmy:
    <<: *fediverser-dev-service

  push_submissions_to_lemmy:
    <<: *fediverser-dev-service

  celery:
    <<: *fediverser-dev-service

  celerybeat:
    <<: *fediverser-dev-service

  init_migrate_db:
    <<: *fediverser-dev-service
    restart: on-failure

  init_collect_static:
    <<: *fediverser-dev-service
    restart: on-failure

  lemmy:
    <<: [*fediverser-development, *lemmy-service]
    image: dessalines/lemmy:0.19.5
    environment:
      - RUST_LOG="warn,lemmy_server=info,lemmy_api=debug,lemmy_api_common=info,lemmy_api_crud=info,lemmy_apub=info,lemmy_db_queries=info,lemmy_db_schema=info,lemmy_db_views=info,lemmy_db_views_actor=info,lemmy_db_views_moderator=info,lemmy_routes=info,lemmy_utils=info"
    volumes:
      - lemmy-config-data:/config/
    depends_on:
      - lemmy-db
      - lemmy-pictrs

  lemmy-ui:
    <<: [*fediverser-development, *lemmy-service]
    image: dessalines/lemmy-ui:0.19.5
    restart: always
    environment:
      - LEMMY_UI_LEMMY_INTERNAL_HOST=lemmy:8536
    volumes:
      - lemmy-ui-themes-data:/app/extra_themes
    depends_on:
      - lemmy

  lemmy-db:
    <<: [*fediverser-development, *lemmy-service]
    image: postgres:16
    environment:
      POSTGRES_USER: lemmy
      POSTGRES_PASSWORD: lemmy
      POSTGRES_DB: lemmy
    volumes:
      - lemmy-db-data:/var/lib/postgresql/data
    restart: always

  lemmy-pictrs:
    <<: [*fediverser-development, *lemmy-service]
    image: asonix/pictrs:0.5.16
    environment:
      PICTRS__API_KEY: pictrs_pass
      RUST_BACKTRACE: full
      PICTRS__MEDIA__IMAGE__FORMAT: webp
      PICTRS__MEDIA__ENABLE_FULL_VIDEO: "true"
      PICTRS__MEDIA__VIDEO_CODEC: vp9
      PICTRS__MEDIA__ANIMATION__MAX_WIDTH: 1920
      PICTRS__MEDIA__ANIMATION__MAX_HEIGHT: 1080
      PICTRS__MEDIA__ANIMATION__MAX_AREA: 2073600
      PICTRS__MEDIA__ANIMATION__MAX_FRAME_COUNT: 1800
      PICTRS__STORE__TYPE: object_storage
      PICTRS__STORE__ENDPOINT: "http://lemmy-minio:9000"
      PICTRS__STORE__BUCKET_NAME: "lemmy-media"
      PICTRS__STORE__REGION: "us-east-1"
      PICTRS__STORE__USE_PATH_STYLE: "true"
      PICTRS__STORE__ACCESS_KEY: minio_user
      PICTRS__STORE__SECRET_KEY: minio_pass
    restart: always
    volumes:
      - lemmy-pictrs-data:/mnt

  lemmy-proxy:
    <<: *lemmy-service
    image: nginx:1-alpine
    restart: on-failure
    ports:
      - "80:80"
    volumes:
      - lemmy-nginx-config-data:/etc/nginx/:ro

    depends_on:
      - lemmy
      - lemmy-ui

  lemmy-minio:
    <<: [*fediverser-development, *lemmy-service]
    image: minio/minio
    command: server /data
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_pass
    ports:
      - "9000:9000"
    volumes:
      - lemmy-media-data:/data

  init_minio_buckets:
    <<: *lemmy-service
    image: minio/mc
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_pass

    depends_on:
      - lemmy-minio

    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add fediverser http://lemmy-minio:9000 minio_user minio_pass;
      /usr/bin/mc mb fediverser/lemmy-media;
      /usr/bin/mc anonymous set download fediverser/lemmy-media;
      /usr/bin/mc anonymous set public fediverser/lemmy-media;
      exit 0;
      "

volumes:
  static-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_STATIC_MOUNT_PATH?Variable not set}"

  media-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_MEDIA_MOUNT_PATH?Variable not set}"

  postgresql-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_DATABASE_MOUNT_PATH?Variable not set}"

  broker-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_BROKER_MOUNT_PATH?Variable not set}"

  cache-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_CACHE_MOUNT_PATH?Variable not set}"

  ipython-dev-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_IPYTHON_DATA_PATH?Variable not set}"

  lemmy-db-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_LEMMY_DATABASE_MOUNT_PATH?Variable not set}"

  lemmy-pictrs-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_LEMMY_PICTRS_MOUNT_PATH?Variable not set}"

  lemmy-config-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_LEMMY_BACKEND_CONFIG_MOUNT_PATH?Variable not set}"

  lemmy-ui-themes-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_LEMMY_UI_MOUNT_PATH?Variable not set}"

  lemmy-nginx-config-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_LEMMY_NGINX_CONFIG_MOUNT_PATH?Variable not set}"

  lemmy-media-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_LEMMY_MEDIA_MOUNT_PATH?Variable not set}"


  cloudflared-credentials-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_CLOUDFLARE_CREDENTIALS_PATH?Variable not set}"

  cloudflared-config-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${FEDIVERSER_CLOUDFLARE_CONFIG_PATH?Variable not set}"
