# Generated by Django 4.2.13 on 2024-07-18 14:00

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0003_fediversedinstance_creates_reddit_mirror_bots_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="fediversedinstance",
            name="instance",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="fediverser_configuration",
                to="core.instance",
            ),
        ),
        migrations.CreateModel(
            name="Endorsement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "endorsed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="endorsed_instances",
                        to="core.fediversedinstance",
                    ),
                ),
                (
                    "endorser",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="endorsing_instances",
                        to="core.fediversedinstance",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConnectedRedditAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "actor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.person"
                    ),
                ),
                (
                    "reddit_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.redditaccount"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChangeFeedEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "published_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="published_feed_entries",
                        to="core.fediversedinstance",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EndorsementEntry",
            fields=[
                (
                    "changefeedentry_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.changefeedentry",
                    ),
                ),
                (
                    "endorsemement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feed_entries",
                        to="core.endorsement",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.changefeedentry",),
        ),
        migrations.CreateModel(
            name="ConnectedRedditAccountEntry",
            fields=[
                (
                    "changefeedentry_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.changefeedentry",
                    ),
                ),
                (
                    "connection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feed_entries",
                        to="core.connectedredditaccount",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.changefeedentry",),
        ),
    ]
