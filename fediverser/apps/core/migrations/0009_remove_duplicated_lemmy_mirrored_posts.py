# Generated by Django 4.2.6 on 2023-10-15 22:07

from django.db import migrations
from django.db.models import Count


def remove_duplicate_mirrored_posts(apps, schema_editor):
    LemmyMirroredPost = apps.get_model("core", "LemmyMirroredPost")

    posts = LemmyMirroredPost.objects.values("lemmy_community", "reddit_submission").annotate(
        total_communities=Count("lemmy_community"),
        total_submissions=Count("reddit_submission"),
    )

    duplicated = posts.filter(total_submissions__gt=1, total_communities__gt=1)

    to_delete_ids = []

    for post in duplicated:
        reddit_submission_id = post["reddit_submission"]
        lemmy_community_id = post["lemmy_community"]
        extra = post["total_communities"] - 1
        duplicates = LemmyMirroredPost.objects.filter(
            reddit_submission_id=reddit_submission_id, lemmy_community_id=lemmy_community_id
        )

        to_delete_ids.extend(duplicates.order_by("created").values_list("id", flat=True)[:extra])

    LemmyMirroredPost.objects.filter(id__in=to_delete_ids).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0008_mark_mirrored_migrations"),
    ]

    operations = [
        migrations.RunPython(
            remove_duplicate_mirrored_posts, reverse_code=migrations.RunPython.noop
        )
    ]
