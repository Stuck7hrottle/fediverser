# Generated by Django 4.2.13 on 2024-07-25 06:49

import django.db.models.deletion
from django.db import migrations, models


def move_annotations(apps, schema_editor):
    InstanceAnnotation = apps.get_model("core", "InstanceAnnotation")
    CommunityAnnotation = apps.get_model("core", "CommunityAnnotation")
    SubredditAnnotation = apps.get_model("core", "SubredditAnnotation")

    Instance = apps.get_model("core", "Instance")
    Community = apps.get_model("core", "Community")
    Subreddit = apps.get_model("core", "RedditCommunity")

    for instance in Instance.objects.all():
        InstanceAnnotation.objects.get_or_create(instance=instance)

    for community in Community.objects.all():
        annotation, _ = CommunityAnnotation.objects.update_or_create(
            community=community, defaults={"category": community.category}
        )

    for subreddit in Subreddit.objects.all():
        annotation, _ = SubredditAnnotation.objects.update_or_create(
            subreddit=subreddit,
            defaults={
                "category": subreddit.category,
                "hidden": subreddit.hidden,
                "locked": subreddit.locked,
            },
        )


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0017_remove_community_tags_remove_instance_category_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="CommunityAnnotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("hidden", models.BooleanField(default=False)),
                ("notes", models.TextField()),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="community_annotations",
                        to="core.category",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            (
                                "inactive",
                                "Inactive (Lingering community or Infrequent Content posted)",
                            ),
                            ("abandoned", "Abandoned"),
                            ("closed", "Closed"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "community",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annotation",
                        to="core.community",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstanceAnnotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("hidden", models.BooleanField(default=False)),
                ("notes", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("abandoned", "Abandoned"),
                            ("closed", "Closed"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "instance",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annotation",
                        to="core.instance",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubredditAnnotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("hidden", models.BooleanField(default=False)),
                ("notes", models.TextField()),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subreddit_annotations",
                        to="core.category",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            (
                                "inactive",
                                "Inactive (Lingering community or Infrequent Content posted)",
                            ),
                            ("abandoned", "Abandoned"),
                            ("closed", "Closed"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "subreddit",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annotation",
                        to="core.redditcommunity",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="redditcommunity",
            name="last_synced_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.DeleteModel(
            name="LockedItem",
        ),
        migrations.RunPython(move_annotations, reverse_code=migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="redditcommunity",
            name="category",
        ),
        migrations.RemoveField(
            model_name="redditcommunity",
            name="hidden",
        ),
        migrations.RemoveField(
            model_name="redditcommunity",
            name="locked",
        ),
        migrations.RemoveField(
            model_name="redditcommunity",
            name="status",
        ),
    ]
